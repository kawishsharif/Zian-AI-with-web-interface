@tailwind base;

@layer base {

  html,
  body {
    width: 100%;
    height: 100%;
  }

  html {
    font-family: "Inter", sans-serif;
    color: #fff;
  }
}




@tailwind components;

@layer components {
  .primary-btn-neon {
    @apply border-2 border-primary/70 rounded-10 transition-all h-10 py-2 px-[14px] inline-flex items-center gap-[10px] text-white disabled:opacity-50;
    --green: rgba(233, 69, 208, 1);
    position: relative;
    overflow: hidden;
    background: linear-gradient(to right,
        rgba(233, 69, 208, 0.1) 1%,
        transparent 40%,
        transparent 60%,
        rgba(233, 69, 208, 0.1) 100%);
    box-shadow: inset 0 0 20px rgba(233, 69, 208, 0.6),
      0 0 9px 3px rgba(233, 69, 208, 0.1);
  }

  .primary-btn-neon:not(:disabled):hover {
    box-shadow: inset 0 0 10px rgba(233, 69, 208, 0.6),
      0 0 9px 3px rgba(233, 69, 208, 0.2);
  }

  .primary-btn-neon:before {
    content: "";
    position: absolute;
    left: -4em;
    width: 4em;
    height: 100%;
    top: 0;
    transition: transform 0.4s ease-in-out;
    background: linear-gradient(to right,
        transparent 1%,
        rgba(233, 69, 208, 0.1) 40%,
        rgba(233, 69, 208, 0.1) 60%,
        transparent 100%);
  }

  .primary-btn-neon:not(:disabled):hover:before {
    transform: translateX(15em);
  }
}

@tailwind utilities;


body {
  width: 100%;
}

.stick-shadow {
  box-shadow: 0px 10px 30px #e945d0;
}

.text-shadow {
  text-shadow: 0px 10px 30px #f3e0ef;
}

.box-conic-bg-sm {
  background: conic-gradient(from 180deg at 60.95% 99.81%,
      rgba(0, 0, 0, 0.105455) -2.11deg,
      rgba(233, 69, 208, 0) 131.45deg,
      rgba(233, 69, 208, 1) 175.58deg,
      rgba(233, 69, 208, 0) 252.32deg,
      rgba(0, 0, 0, 0.0885149) 310.85deg,
      rgba(0, 0, 0, 0.105455) 357.89deg,
      rgba(233, 69, 208, 0) 491.45deg);
}

.box-conic-bg-lg {
  background: linear-gradient(180deg, #e945d0 0%, rgba(233, 69, 208, 0) 100%);
}


.no-scrollbar::-webkit-scrollbar {
  display: none;
}


input[type='time']::-webkit-inner-spin-button,
input[type='time']::-webkit-calendar-picker-indicator {
  background: url(/icons/clock.svg);
  width: 16px;
  height: 16px;
  cursor: pointer;
  opacity: 1;
  background-size: contain;
}

input[type='date']::-webkit-inner-spin-button,
input[type='date']::-webkit-calendar-picker-indicator {
  background: url(/icons/calendar.svg);
  width: 16px;
  height: 16px;
  cursor: pointer;
  opacity: 1;
  background-size: contain;
}

::-webkit-scrollbar {
  width: 4px;
  height: 4px;
  background: transparent;
  /* background: rgba(255, 255, 255, 0.1); */
}

.scrollbar-2::-webkit-scrollbar {
  width: 2px;
  height: 2px;
}

::-webkit-scrollbar-thumb {
  background: #E945D0;
  border-radius: 50px;
}

@font-face {
  font-family: Nebula;
  src: url("/fonts/nebula-regular.otf");
}









/* Loading Sparkle Animation Start  */

.loading-sparkles {
  padding-left: 13px;
}


.loading-sparkles .sparkle path {
  color: white;
  transform-box: fill-box;
  transform-origin: center;
  fill: currentColor;
  stroke: currentColor;
  animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
  animation-duration: 0.6s;
  animation-iteration-count: infinite;
  transition: color var(--transition);

}


.loading-sparkles.active .sparkle path {
  animation-name: bounce-sparkle-btn;
}


@keyframes bounce-sparkle-btn {

  35%,
  65% {
    scale: var(--scale);
  }
}

.loading-sparkles .sparkle path:nth-of-type(1) {
  --scale: 0.4;
  --delay: 0.1;
}

.loading-sparkles .sparkle path:nth-of-type(2) {
  --scale: 1.5;
  --delay: 0.2;
}

.loading-sparkles .sparkle path:nth-of-type(3) {
  --scale: 2.5;
  --delay: 0.35;
}




.loading-sparkles svg {
  inline-size: 1.25em;
  translate: -25% -5%;
}



/* Loading Sparkle Animation End */










/* Sparkle Button Style */
.sparkle-button {
  --active: 0;
  --bg: radial-gradient(40% 50% at center 100%,
      hsl(270 calc(var(--active) * 97%) 72% / var(--active)),
      transparent),
    radial-gradient(80% 100% at center 120%,
      hsl(260 calc(var(--active) * 97%) 70% / var(--active)),
      transparent),
    hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
  background: linear-gradient(90deg, rgba(56, 28, 77, 0.8) 0%, rgba(31, 7, 30, 0.8) 100%);
  font-size: 1.2rem;
  font-weight: 500;
  border: 0;
  cursor: pointer;
  padding: 1em 1em;
  display: flex;
  align-items: center;
  gap: 0.25em;
  white-space: nowrap;
  border-radius: 10px;
  position: relative;
  box-shadow: 0 0 calc(var(--active) * 3em) calc(var(--active) * 1em) rgba(233, 69, 208, 1),
    0 0em 0 0 hsl(260 calc(var(--active) * 97%) calc((var(--active) * 50%) + 30%)) inset,
    0 -0.05em 0 0 hsl(260 calc(0 * 97%) calc(0 * 60%)) inset;
  transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
  scale: calc(1 + (var(--active) * 0.1));
  transition: .3s;
}

.sparkle-button:is(:hover, :active) {
  background: #e945d0;
}

.sparkle-button:active {
  scale: 1;
  transition: .3s;
}

.sparkle-button .sparkle path {
  color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
  transform-box: fill-box;
  transform-origin: center;
  fill: currentColor;
  stroke: currentColor;
  animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
  animation-duration: 0.6s;
  /* animation-iteration-count: infinite; */
  transition: color var(--transition);
}

.sparkle-button:is(:hover, :focus-visible) path {
  animation-name: bounce-sparkle-btn;
}

@keyframes bounce-sparkle-btn {

  35%,
  65% {
    scale: var(--scale);
  }
}

.sparkle-button .sparkle path:nth-of-type(1) {
  --scale: 0.5;
  --delay: 0.1;
  --base: 40%;
}

.sparkle-button .sparkle path:nth-of-type(2) {
  --scale: 1.5;
  --delay: 0.2;
  --base: 20%;
}

.sparkle-button .sparkle path:nth-of-type(3) {
  --scale: 2.5;
  --delay: 0.35;
  --base: 30%;
}

/* 
.sparkle-button .spark {
  position: absolute;
  inset: 0;
  border-radius: 10px;
  rotate: 0deg;
  overflow: hidden;
  mask: linear-gradient(white, transparent 50%);
  animation: flip calc(var(--spark) * 2) infinite steps(2, end);
} */

@keyframes flip {
  to {
    rotate: 360deg;
  }
}

/* .spark:before {
  content: "";
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 0%;
  left: 50%;
  z-index: -1;
  translate: -50% -15%;
  rotate: 0;
  transform: rotate(-90deg);
  opacity: calc((var(--active)) + 0.4);
  background: conic-gradient(from 0deg,
      transparent 0 340deg,
      white 360deg);
  transition: opacity var(--transition);
  animation: rotate var(--spark) linear infinite both;
} */

.sparkle-button .spark:after {
  content: "";
  position: absolute;
  inset: var(--cut);
  border-radius: 10px;
}

.sparkle-button .backdrop {
  position: absolute;
  inset: var(--cut);
  background: var(--bg);
  border-radius: 10px;
  transition: background var(--transition);
}

@keyframes rotate {
  to {
    transform: rotate(90deg);
  }
}


.sparkle-button:is(:hover, :focus-visible)~ :is(.bodydrop, .particle-pen) {
  --active: 1;
  --play-state: running;
}

.sparkle-button:is(:hover, :focus-visible) {
  --active: 1;
  --play-state: running;
}

/* 
.sparkle-button .particle-pen {
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  -webkit-mask: radial-gradient(white, transparent 65%);
  z-index: -1;
  opacity: var(--active, 0);
  transition: opacity var(--transition);
} */
/* 
.sparkle-button .particle {
  fill: white;
  width: calc(var(--size, 0.25) * 1rem);
  aspect-ratio: 1;
  position: absolute;
  top: calc(var(--y) * 1%);
  left: calc(var(--x) * 1%);
  opacity: var(--alpha, 1);
  animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
  transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
  z-index: -1;
  animation-play-state: var(--play-state, paused);
}

.sparkle-button .particle path {
  fill: hsl(0 0% 90%);
  stroke: none;
}

.sparkle-button .particle:nth-of-type(even) {
  animation-direction: reverse;
} */

/* @keyframes float-out {
  to {
    rotate: 360deg;
  }
} */


.sparkle-button svg {
  inline-size: 1.25em;
  translate: -25% -5%;
}


input[type='number'] {
  -moz-appearance:textfield;
  appearance: textfield;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
}



/* Apply styles when the tooltip content is visible */
.custom-tooltip-content {
  display: none; 
  z-index: 999; 
  transition: opacity 0.2s ease-in-out; 
}

.custom-tooltip-content.open {
  display: block; 
  opacity: 1; 
}
@media screen and (max-width: 768px) {
  .custom-tooltip-content.open {
    display: block; 
    opacity: 1; 
  }
}






.code-viewer pre {
  background: transparent !important;
}